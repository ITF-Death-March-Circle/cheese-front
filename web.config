<?xml version="1.0" encoding="utf-8"?>
<!--
     iinode が IIS または IIS Express の後ろでノードプロセスを実行するために使用される場合、
     この設定ファイルが必要です。詳細はこちらを確認してください:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
  <system.webServer>
    <!-- WebSocket サポートの詳細は https://azure.microsoft.com/en-us/blog/introduction-to-websockets-on-windows-azure-web-sites/ を確認してください -->
    <webSocket enabled="false" />
    <handlers>
      <!-- server.js ファイルが iisnode モジュールによって処理される Node.js サイトであることを示しています -->
      <add name="iisnode" path="server" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <!-- node-inspector のデバッグの要求を妨害しないようにする -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server\/debug[\/]?" />
        </rule>

        <!-- はじめに受信した URL が /public フォルダ内の物理ファイルと一致するかどうかを判別します -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>

        <!-- 他のすべての URL は Node.js サイトのエントリーポイントにマッピングされます -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server"/>
        </rule>
      </rules>
    </rewrite>

    <!-- 'bin' ディレクトリは Node.js にとって特別な意味はありませんが、アプリケーションをそこに置くことができます -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- エラーレスポンスがそのまま残るようにします -->
    <httpErrors existingResponse="PassThrough" />

    <!--
      以下のオプションを使用すれば、IIS 内で Node がホストされる方法を制御することができます:
        * watchedFiles: サーバーを再起動する時の変更を監視する、セミコロンで区切られたリストのファイル
        * node_env: 環境変数 NODE_ENV として node に伝わります
        * debuggingEnabled - 組み込みのデバッガを有効にするかどうかを制御します

      オプションの全リストは https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config で確認してください
    -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
  </system.webServer>
</configuration>
